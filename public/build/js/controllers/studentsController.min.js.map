{"version":3,"sources":["studentsController.js"],"names":[],"mappingsfile":"studentsController.min.js","sourcesContent":["angular.module('myapp')\n.controller('StudentsController', ['$rootScope', '$state', '$stateParams', 'Restangular', '$modal', 'classroom',\nfunction ($rootScope, $state, $stateParams, Restangular, $modal, classroom) {\n    var vm = this;\n    var classID = $stateParams.id;\n    var base = Restangular.one('classrooms', classID);\n\n    //新學生資料，可能多筆，所以用陣列儲存\n    vm.newStudents = [];\n\n    getStudents();\n\n    vm.newStudent = function (singleStuData) {\n        if(angular.isObject(singleStuData)) {\n            vm.newStudents.push(singleStuData);\n        }\n        base.post('students', vm.newStudents).then(\n            function(response){\n                vm.newStudents = [];\n                getStudents();\n            },\n            function(error){\n                console.log(error);\n            }\n        );\n\n    };\n\n    vm.edit = function(stu){\n        var modalInstance = $modal.open({\n            templateUrl: 'partials/modals/editStudentForm.html',\n            controller: 'EditStuFormModalInstanceCtrl',\n            controllerAs: 'ModalCtrl',\n            size: 'sm',\n            resolve: {\n                stu: function() {\n                    return stu;\n                }\n            }\n        });\n\n        modalInstance.result.then(function () {\n            //console.log(stu);\n            stu.save();\n        }, function () {\n            console.info('Edit Student Modal dismissed at: ' + new Date());\n        });\n    };\n\n    vm.delete = function(item){\n        item.remove().then(\n            function(response){\n                vm.students.splice(vm.students.indexOf(item), 1);\n            },\n            function (error) {\n                console.log(error);\n            }\n        );\n\n    };\n\n    vm.exportToExcel = function(){\n        //var filename = classroom.class_name + \"(班級代碼：\" + classroom.class_code + \")學生名單.xlsx\";\n        var filename = classroom.class_name.concat(\"(班級代碼：\", classroom.class_code, \")學生名單.xlsx\");\n        alasql('SELECT num,name,link_code INTO XLSX(\"' + filename + '\", {headers: true}) FROM ?', [vm.students]);\n    };\n\n    vm.showNewStuFormModal = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'partials/modals/newStudentForm.html',\n            controller: 'NewStuFormModalInstanceCtrl',\n            controllerAs: 'ModalCtrl',\n            size: 'sm'\n        });\n\n        modalInstance.result.then(function (data) {\n            //vm.newStudents = data;\n            vm.newStudent(data);\n        }, function () {\n            console.info('Import Modal dismissed at: ' + new Date());\n        });\n    };\n\n    vm.showImportModal = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'partials/modals/importStudents.html',\n            controller: 'ImportStuModalInstanceCtrl',\n            controllerAs: 'ImportStuModalCtrl',\n            size: 'sm'\n        });\n\n        modalInstance.result.then(function (data) {\n            vm.newStudents = data;\n            vm.newStudent();\n        }, function () {\n            console.info('Import Modal dismissed at: ' + new Date());\n        });\n    };\n\n    function getStudents(){\n        base.getList('students').then(\n            function (response){\n                vm.students = response;\n            },\n            function (error) {\n                console.log(error);\n            }\n        );\n    }\n\n}])\n\n.controller('ImportStuModalInstanceCtrl', ['$modalInstance','XLSXReaderService', function ($modalInstance, XLSXReaderService) {\n    var vm = this;\n\n    vm.showPreview = false; //以表格預覽\n    vm.showJSONPreview = true; //以json預覽\n    vm.items = [];//存放結果物件之陣列，一列為一個物件，key為欄名\n    vm.sheets = [];\n\n    //選擇檔案或選擇另一個檔案\n    //取得工作表 array\n    vm.fileChanged = function(files) {\n        vm.isProcessing = true; //處理中之 flag\n        vm.msg = \"讀取中....\";\n        vm.sheets = []; //工作表 array\n        vm.excelFile = files[0];//選擇之excel檔(.xlsx格式)\n\n        XLSXReaderService.readFile(vm.excelFile, vm.showPreview, vm.showJSONPreview)\n            .then(function (xlsxData) {\n                vm.sheets = xlsxData.sheets;\n                vm.isProcessing = false;\n                vm.msg = '';\n            });\n\n    };\n\n    //為了讓 view 中呼叫，bind to $scope\n    //$scope.fileChanged = vm.fileChanged;\n\n    // 選擇工作表時更新結果物件陣列\n    vm.updateItems = function() {\n        vm.items = vm.sheets[vm.selectedSheetName];\n    }\n\n    vm.ok = function () {\n        $modalInstance.close(vm.items);\n    };\n\n    vm.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}])\n\n.controller('NewStuFormModalInstanceCtrl', ['$modalInstance', function ($modalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n        $modalInstance.close(vm.newStu);\n    };\n\n    vm.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}])\n\n.controller('EditStuFormModalInstanceCtrl', ['$modalInstance', 'stu', '$http', function ($modalInstance, stu, $http) {\n    var vm = this;\n    vm.stu = stu;\n\n    vm.regenerateLinkCode = function(stuID){\n        $http.get('reget-link-code/' + stuID).then(\n            function(response){\n                console.log(response);\n                vm.stu.link_code = response.data;\n            }\n        );\n\n    };\n\n    vm.ok = function () {\n        $modalInstance.close();\n    };\n\n    vm.cancel = function () {\n        $modalInstance.dismiss('cancel');\n    };\n}]);"],"sourceRoot":"/source/"}